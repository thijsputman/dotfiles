name: Lint codebase

"on":
  push:
    branches: [main, development]
    tags-ignore: ["**"]
  pull_request:
jobs:
  lint:
    name: Run pre-commit
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - name: Checkout code (PR)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Checkout code
        if: "!${{ github.event_name == 'pull_request' }}"
        uses: actions/checkout@v4
      - name: Restore cached dependencies
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/pre-commit
            ~/.cache/pip
            ~/.npm
            ~/.local/bin
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: pre-commit-cache-${{ hashFiles('package-lock.json', '.github/scripts/setup-pre-commit.sh') }}
      - name: Setup PATH
        run: |
          mkdir -p "$HOME/.local/bin"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21
          cache: false
      - name: Setup pre-commit
        env:
          USE_PIPX: false
          USE_GO: true
        run: .github/scripts/setup-pre-commit.sh
      - name: Run pre-commit (PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          pre-commit run --color=always \
            --from-ref ${{ github.event.pull_request.base.sha }} \
            --to-ref HEAD
        env:
          GH_ACTION_OUTPUT: true
      - name: Run pre-commit
        if: "!${{ github.event_name == 'pull_request' }}"
        run: pre-commit run --color=always --all-files
        env:
          GH_ACTION_OUTPUT: true
      - name: Cache dependencies
        uses: actions/cache/save@v4
        if: (success() || failure()) && steps.cache-restore.outputs.cache-hit != 'true'
        with:
          path: |
            ~/.cache/pre-commit
            ~/.cache/pip
            ~/.npm
            ~/.local/bin
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}
