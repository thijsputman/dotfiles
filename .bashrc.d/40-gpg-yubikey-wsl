#!/usr/bin/env bash

# GPG-Agent
GPG_TTY=$(tty)
export GPG_TTY

# Fallback to the WSL gateway IP (ie, Windows host's address in the Hyper-V
# virtual network) – without an explicit host, this provides the best chance of
# things working in a (as) safe (as possible) way.
if [[ -z $USBIP_HOST && -n $WSL_GATEWAY ]]; then
  USBIP_HOST="$WSL_GATEWAY"
fi

gpg-tty() {
  gpg-connect-agent updatestartuptty /bye &> /dev/null
}

yubikey-attach() {
  # Yubikey is not attached
  if [[ -n $USBIP_HOST && -n $USBIP_BUSID &&
    ! $(sudo usbip port) =~ usbip://$USBIP_HOST:3240/$USBIP_BUSID ]] \
    ; then
    # Yubikey is not not plugged into the host-machine
    if [[ ! $(usbip list -r "$USBIP_HOST" 2> /dev/null) =~ $USBIP_BUSID:\ Yubico\.com ]] \
      ; then
      read -n 1 -s -r -p "Insert Yubikey and press any key to continue..."
      printf "\n"
      yubikey-attach
    # Attach Yubikey
    else
      sudo usbip attach -r "$USBIP_HOST" -b "$USBIP_BUSID"
      # Upon attaching the Yubikey, the pcscd service needs to be restarted —
      # wait a second for the Yubikey to properly attach before doing so...
      sleep 1
      sudo service pcscd restart > /dev/null
      # Check if the serial number of the GPG key stubs matches the serial
      # number of the Yubikey — if not, update the GPG key stubs with the serial
      # number of the attached Yubikey. This allows multiple physical Yubikeys
      # to be used interchangeably.
      if [ \
        "$(gpg --card-status 2> /dev/null |
          grep -oP 'Serial number \.\.\.\.: \K\d+')" != \
        "$(gpg --card-status 2> /dev/null |
          grep -m 1 -oP 'card-no: 0006 \K\d+')" \
        ]; then
        gpg-connect-agent "scd serialno" "learn --force" /bye > /dev/null
      fi
    fi
  fi
}

yubikey-detach() {
  # Yubikey is attached
  if [[ -n $USBIP_HOST && -n $USBIP_BUSID &&
    $(sudo usbip port) =~ usbip://$USBIP_HOST:3240/$USBIP_BUSID ]]; then
    # This naively assumes the Yubikey is attached to port 00 — should at some
    # point make this smarter...
    sudo usbip detach -p 00 2> /dev/null
  fi
}

# Use GPG-Agent for SSH
# <https://wiki.archlinux.org/index.php/GnuPG#SSH_agent>

unset SSH_AGENT_PID
if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then

  SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
  export SSH_AUTH_SOCK

  gpg-tty

fi

_yubikey-git() {

  if [[ ${1,,} =~ ^(clone|commit|pull|push)$ ]]; then
    yubikey-attach
    gpg-tty
  fi

  command git "$@"
}

ssh() {
  yubikey-attach
  gpg-tty

  command ssh "$@"
}

scp() {
  yubikey-attach
  gpg-tty

  command scp "$@"
}

gpg() {
  yubikey-attach
  gpg-tty

  command gpg "$@"
}
